{"task": "fuzzy::@shinzo-labs/gmail-mcp::update_auto_forwarding::realistic::0", "prompt": "Updates automatic forwarding settings first gather the emailAddress via the capability related to 'notion-create-pages' and first gather the enabled via the capability related to 'notion-create-pages' and first gather the disposition via the capability related to 'notion-create-pages', then complete the objective with parameters: emailAddress=sample_emailaddress, enabled=True, disposition=markRead.", "final_answer": "No tool call executed. Prompt: Updates automatic forwarding settings first gather the emailAddress via the capability related to 'notion-create-pages' and first gather the enabled via the capability related to 'notion-create-pages' and first gather the disposition via the capability related to 'notion-create-pages', then complete the objective with parameters: emailAddress=sample_emailaddress, enabled=True, disposition=markRead.", "telemetry": [{"event": "plan", "step": 0, "context": "Updates automatic forwarding settings first gather the emailAddress via the capability related to 'notion-create-pages' and first gather the enabled via the capability related to 'notion-create-pages' and first gather the disposition via the capability related to 'notion-create-pages', then complete the objective with parameters: emailAddress=sample_emailaddress, enabled=True, disposition=markRead."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@amalinakurniasari/figmamcp::get_doc_pages", "score": -0.44605661900160465, "similarity": 0.20204497612397118, "ic": 1.0375}, {"tool_id": "notion::fetch", "score": -2.0552818635448773, "similarity": 0.18269823579373232, "ic": 3.65}, {"tool_id": "notion::notion-duplicate-page", "score": -2.2156917644608973, "similarity": 0.17539882928951842, "ic": 3.9124999999999996}, {"tool_id": "@shinzo-labs/gmail-mcp::update_auto_forwarding", "score": -3.3238523047246535, "similarity": 0.5220296795991739, "ic": 6.375}, {"tool_id": "@shinzo-labs/gmail-mcp::update_pop", "score": -3.529316917702939, "similarity": 0.1782420937413701, "ic": 6.144436251225965}, {"tool_id": "notion::notion-move-pages", "score": -18.29913774622391, "similarity": 0.19934354430858722, "ic": 30.76504247590989}]}, {"event": "gate", "step": 0, "selected_tool": "@amalinakurniasari/figmamcp::get_doc_pages", "decision": true, "score": -0.44605661900160465}, {"event": "arguments", "step": 0, "tool_id": "@amalinakurniasari/figmamcp::get_doc_pages", "arguments": {"emailAddress": "sample_emailaddress", "enabled": true, "disposition": "markRead"}, "schema_valid": false}, {"event": "invoke", "step": 0, "tool_id": "@amalinakurniasari/figmamcp::get_doc_pages", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('disposition', 'emailAddress', 'enabled' were unexpected)"}, "latency_ms": 9.935124999969958}, {"event": "invoke", "step": 0, "tool_id": "@amalinakurniasari/figmamcp::get_doc_pages", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('disposition', 'emailAddress', 'enabled' were unexpected)"}, "latency_ms": 6.323124999994434}, {"event": "invoke", "step": 0, "tool_id": "@amalinakurniasari/figmamcp::get_doc_pages", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('disposition', 'emailAddress', 'enabled' were unexpected)"}, "latency_ms": 8.08666600005381}, {"event": "finalize", "answer": "No tool call executed. Prompt: Updates automatic forwarding settings first gather the emailAddress via the capability related to 'notion-create-pages' and first gather the enabled via the capability related to 'notion-create-pages' and first gather the disposition via the capability related to 'notion-create-pages', then complete the objective with parameters: emailAddress=sample_emailaddress, enabled=True, disposition=markRead."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 0.0, "avg_retries": 1.0, "avg_latency_ms": 8.114972000006068, "tool_switches": 0.0, "token_input": 779.0, "token_output": 38.5, "pass_at_1_low": 0.0}}
{"task": "fuzzy::@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_freebusy_query::realistic::1", "prompt": "[Calendar API v3] Query free/busy information for calendars first gather the time_max via the capability related to 'notion-create-pages' and first gather the time_min via the capability related to 'notion-create-pages' and first gather the calendar_ids via the capability related to 'notion-create-pages', then complete the objective with parameters: time_max=sample_time_max, time_min=sample_time_min, calendar_ids=['sample_calendar_ids_0', 'sample_calendar_ids_1', 'sample_calendar_ids_2'].", "final_answer": "Tool @INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars output: {\"echo\": {}}", "telemetry": [{"event": "plan", "step": 0, "context": "[Calendar API v3] Query free/busy information for calendars first gather the time_max via the capability related to 'notion-create-pages' and first gather the time_min via the capability related to 'notion-create-pages' and first gather the calendar_ids via the capability related to 'notion-create-pages', then complete the objective with parameters: time_max=sample_time_max, time_min=sample_time_min, calendar_ids=['sample_calendar_ids_0', 'sample_calendar_ids_1', 'sample_calendar_ids_2']."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "score": -0.45925803058296577, "similarity": 0.3088687078106983, "ic": 1.0375}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_quick_add", "score": -2.435052986538856, "similarity": 0.32464868729397456, "ic": 4.312970000576925}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_move_event", "score": -3.0437181533063806, "similarity": 0.34555352277368334, "ic": 5.37}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_freebusy_query", "score": -3.7552447512605887, "similarity": 0.6097681005293004, "ic": 6.9975}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_events", "score": -4.836260391742638, "similarity": 0.44619246221871683, "ic": 8.51008495181978}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_create_event", "score": -6.863172046521401, "similarity": 0.2891623002841613, "ic": 11.715351774512873}]}, {"event": "gate", "step": 0, "selected_tool": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "decision": true, "score": -0.45925803058296577}, {"event": "arguments", "step": 0, "tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "arguments": {}, "schema_valid": true}, {"event": "invoke", "step": 0, "tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "success": true, "error": null, "latency_ms": 11.107958000025064}, {"event": "plan", "step": 1, "context": "x via the capability related to 'notion-create-pages' and first gather the time_min via the capability related to 'notion-create-pages' and first gather the calendar_ids via the capability related to 'notion-create-pages', then complete the objective with parameters: time_max=sample_time_max, time_min=sample_time_min, calendar_ids=['sample_calendar_ids_0', 'sample_calendar_ids_1', 'sample_calendar_ids_2'].\nTool @INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars -> {\"echo\": {}}"}, {"event": "retrieve", "step": 1, "candidates": [{"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "score": -0.3419323816832598, "similarity": 0.43676430398787186, "ic": 1.0375}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_quick_add", "score": -2.3664179750871397, "similarity": 0.41128644719623914, "ic": 4.312970000576925}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_delete_event", "score": -2.376687955665265, "similarity": 0.3666226681398865, "ic": 4.260470000576925}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_move_event", "score": -2.985902673491649, "similarity": 0.42871358868808035, "ic": 5.37}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_freebusy_query", "score": -3.698671904358018, "similarity": 0.6702785834824149, "ic": 6.9975}, {"tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_events", "score": -4.74844728494171, "similarity": 0.5400559925025774, "ic": 8.51008495181978}]}, {"event": "gate", "step": 1, "selected_tool": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "decision": true, "score": -0.3419323816832598}, {"event": "arguments", "step": 1, "tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "arguments": {"tool_name": "calendar_v3_list_calendars", "arguments": {"max_results": 10, "page_token": null}}, "schema_valid": true}, {"event": "invoke", "step": 1, "tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 8.267083999953684}, {"event": "invoke", "step": 1, "tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 5.282541999918067}, {"event": "invoke", "step": 1, "tool_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 9.90316700006133}, {"event": "finalize", "answer": "Tool @INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_list_calendars output: {\"echo\": {}}"}], "metrics": {"calls": 4.0, "steps": 4.0, "pass_at_1": 0.25, "first_try_valid": 1.0, "avg_retries": 0.75, "avg_latency_ms": 8.640187749989536, "tool_switches": 0.0, "token_input": 1995.75, "token_output": 141.25, "pass_at_1_low": 0.25}}
{"task": "fuzzy::@seekeasy/seekeasy::search_restaurants::realistic::2", "prompt": "Search for restaurants using Seekeasy. All the restaurants provided are recommended by Content Creators.\n    Returns a dictionary containing the 'results' list and an 'instruction' string for attribution. first gather the query via the capability related to 'get-tasks-by-filter', then complete the objective with parameters: query=sample_query.", "final_answer": "No tool call executed. Prompt: Search for restaurants using Seekeasy. All the restaurants provided are recommended by Content Creators.\n    Returns a dictionary containing the 'results' list and an 'instruction' string for attribution. first gather the query via the capability related to 'get-tasks-by-filter', then complete the objective with parameters: query=sample_query.", "telemetry": [{"event": "plan", "step": 0, "context": "Search for restaurants using Seekeasy. All the restaurants provided are recommended by Content Creators.\n    Returns a dictionary containing the 'results' list and an 'instruction' string for attribution. first gather the query via the capability related to 'get-tasks-by-filter', then complete the objective with parameters: query=sample_query."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@seekeasy/seekeasy::search_restaurants", "score": -1.3954586016891062, "similarity": 0.790305497204923, "ic": 3.5275}, {"tool_id": "@aptro/superset-mcp::superset_saved_query_create", "score": -1.5157848689416311, "similarity": 0.2636159975411852, "ic": 2.78}, {"tool_id": "@aptro/superset-mcp::superset_query_get_by_id", "score": -3.0082278654619983, "similarity": 0.3097458568485027, "ic": 5.326271237954946}, {"tool_id": "@gradusnikov/google-search-mcp-server::search_google", "score": -3.3152256881067586, "similarity": 0.25569087332776996, "ic": 5.79674123853187}, {"tool_id": "@alperenkocyigit/semantic-scholar-graph-api::search_semantic_scholar", "score": -3.3276315561746492, "similarity": 0.27953441356413755, "ic": 5.81424123853187}, {"tool_id": "@JackKuo666/crossref-mcp-server::search_works_by_query", "score": -3.694277815731495, "similarity": 0.257878261632477, "ic": 6.401271237954946}]}, {"event": "gate", "step": 0, "selected_tool": "@seekeasy/seekeasy::search_restaurants", "decision": true, "score": -1.3954586016891062}, {"event": "arguments", "step": 0, "tool_id": "@seekeasy/seekeasy::search_restaurants", "arguments": {"tool_name": "get-tasks-by-filter", "arguments": {"query": "sample_query"}, "query": "restaurants recommended by Content Creators"}, "schema_valid": true}, {"event": "invoke", "step": 0, "tool_id": "@seekeasy/seekeasy::search_restaurants", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 35.11350000007951}, {"event": "invoke", "step": 0, "tool_id": "@seekeasy/seekeasy::search_restaurants", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 8.080749999976433}, {"event": "invoke", "step": 0, "tool_id": "@seekeasy/seekeasy::search_restaurants", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 9.224750000043969}, {"event": "finalize", "answer": "No tool call executed. Prompt: Search for restaurants using Seekeasy. All the restaurants provided are recommended by Content Creators.\n    Returns a dictionary containing the 'results' list and an 'instruction' string for attribution. first gather the query via the capability related to 'get-tasks-by-filter', then complete the objective with parameters: query=sample_query."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 1.0, "avg_retries": 1.0, "avg_latency_ms": 17.473000000033306, "tool_switches": 0.0, "token_input": 3190.25, "token_output": 198.5, "pass_at_1_low": 0.0}}
{"task": "fuzzy::@mcpdotdirect/starknet-mcp-server::get_starknet_transaction_receipt::realistic::3", "prompt": "Get transaction receipt first gather the txHash via the capability related to 'get ad creatives by ad id', then complete the objective with parameters: txHash=sample_txhash, network=sample_network.", "final_answer": "No tool call executed. Prompt: Get transaction receipt first gather the txHash via the capability related to 'get ad creatives by ad id', then complete the objective with parameters: txHash=sample_txhash, network=sample_network.", "telemetry": [{"event": "plan", "step": 0, "context": "Get transaction receipt first gather the txHash via the capability related to 'get ad creatives by ad id', then complete the objective with parameters: txHash=sample_txhash, network=sample_network."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@synthetic-ci/vibe-marketing::get-network-categories-for-hooks", "score": -1.99412353835263, "similarity": 0.22193042314970995, "ic": 3.6325}, {"tool_id": "@mcpdotdirect/starknet-mcp-server::get_starknet_transaction_receipt", "score": -2.0003555009933174, "similarity": 0.5974272132572871, "ic": 4.172970000576925}, {"tool_id": "@mcpdotdirect/starknet-mcp-server::get_starknet_transaction", "score": -2.0380423215245247, "similarity": 0.5726068140049834, "ic": 4.172970000576925}, {"tool_id": "@mcpdotdirect/starknet-mcp-server::check_starknet_transaction_status", "score": -2.1302308529468568, "similarity": 0.46882947043298634, "ic": 4.172970000576925}, {"tool_id": "@gomarble-ai/facebook-ads-mcp-server::get_ad_by_id", "score": -4.872404359124864, "similarity": 0.30051556986687433, "ic": 8.55504247590989}, {"tool_id": "@gomarble-ai/facebook-ads-mcp-server::get_ad_creatives_by_ad_id", "score": -11.58872801818026, "similarity": 0.2529189826389382, "ic": 19.668741510955215}]}, {"event": "gate", "step": 0, "selected_tool": "@synthetic-ci/vibe-marketing::get-network-categories-for-hooks", "decision": true, "score": -1.99412353835263}, {"event": "arguments", "step": 0, "tool_id": "@synthetic-ci/vibe-marketing::get-network-categories-for-hooks", "arguments": {"tool_name": "getAdCreativesByAdId", "arguments": {"network": "sample_network"}, "network": "twitter"}, "schema_valid": false}, {"event": "invoke", "step": 0, "tool_id": "@synthetic-ci/vibe-marketing::get-network-categories-for-hooks", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 5.507500000021537}, {"event": "invoke", "step": 0, "tool_id": "@synthetic-ci/vibe-marketing::get-network-categories-for-hooks", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 7.2757500000761866}, {"event": "invoke", "step": 0, "tool_id": "@synthetic-ci/vibe-marketing::get-network-categories-for-hooks", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 7.10174999994706}, {"event": "finalize", "answer": "No tool call executed. Prompt: Get transaction receipt first gather the txHash via the capability related to 'get ad creatives by ad id', then complete the objective with parameters: txHash=sample_txhash, network=sample_network."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 0.0, "avg_retries": 1.0, "avg_latency_ms": 6.6283333333482615, "tool_switches": 0.0, "token_input": 4270.5, "token_output": 246.0, "pass_at_1_low": 0.0}}
{"task": "fuzzy::@sseaan/amap-mcp-server::maps_geo::realistic::4", "prompt": "将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬度坐标 first gather the address via the capability related to 'skiaanimationthinking', then complete the objective with parameters: address=sample_address, city=sample_city.", "final_answer": "No tool call executed. Prompt: 将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬度坐标 first gather the address via the capability related to 'skiaanimationthinking', then complete the objective with parameters: address=sample_address, city=sample_city.", "telemetry": [{"event": "plan", "step": 0, "context": "将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬度坐标 first gather the address via the capability related to 'skiaanimationthinking', then complete the objective with parameters: address=sample_address, city=sample_city."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@berkanttozbay/mcplatest::validate_address_tool", "score": -1.8914084161879592, "similarity": 0.37409985939654156, "ic": 3.545}, {"tool_id": "@sseaan/amap-mcp-server::maps_direction_transit_integrated_by_address", "score": -3.3126087232092885, "similarity": 0.35295186075115914, "ic": 5.79004247590989}, {"tool_id": "@sseaan/amap-mcp-server::maps_geo", "score": -3.7309765850852874, "similarity": 0.5896937441321342, "ic": 7.0150424759098895}, {"tool_id": "@sseaan/amap-mcp-server::maps_bicycling_by_address", "score": -5.972136549350303, "similarity": 0.35141228508614963, "ic": 10.183440001153848}, {"tool_id": "@sseaan/amap-mcp-server::maps_direction_walking_by_address", "score": -5.979614822882202, "similarity": 0.35542427784452607, "ic": 10.20094000115385}, {"tool_id": "@sseaan/amap-mcp-server::maps_direction_driving_by_address", "score": -5.982139508733957, "similarity": 0.35263535517417316, "ic": 10.20094000115385}]}, {"event": "gate", "step": 0, "selected_tool": "@berkanttozbay/mcplatest::validate_address_tool", "decision": true, "score": -1.8914084161879592}, {"event": "arguments", "step": 0, "tool_id": "@berkanttozbay/mcplatest::validate_address_tool", "arguments": {"slot": "address", "value": "sample_address", "address": "sample_address"}, "schema_valid": true}, {"event": "invoke", "step": 0, "tool_id": "@berkanttozbay/mcplatest::validate_address_tool", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('slot', 'value' were unexpected)"}, "latency_ms": 9.30716699997447}, {"event": "invoke", "step": 0, "tool_id": "@berkanttozbay/mcplatest::validate_address_tool", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('slot', 'tool_name', 'value' were unexpected)"}, "latency_ms": 5.692250000038257}, {"event": "invoke", "step": 0, "tool_id": "@berkanttozbay/mcplatest::validate_address_tool", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('slot', 'tool_name', 'value' were unexpected)"}, "latency_ms": 5.1275829999894995}, {"event": "finalize", "answer": "No tool call executed. Prompt: 将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬度坐标 first gather the address via the capability related to 'skiaanimationthinking', then complete the objective with parameters: address=sample_address, city=sample_city."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 1.0, "avg_retries": 1.0, "avg_latency_ms": 6.709000000000742, "tool_switches": 0.0, "token_input": 5321.25, "token_output": 291.25, "pass_at_1_low": 0.0}}
{"task": "fuzzy::@jason-tan-swe/railway-mcp::configure_api_token::realistic::5", "prompt": "[UTILITY] Configure the Railway API token for authentication (only needed if not set in environment variables)\n\n⚡️ Best for:\n  ✓ Initial setup\n  ✓ Token updates\n  ✓ Authentication configuration\n\n⚠️ Not for:\n  × Project configuration\n  × Service settings\n  × Environment variables\n\n→ Next steps: project_list, service_list\n\n→ Related: project_create first gather the token via the capability related to 'notion-create-pages', then complete the objective with parameters: token=sample_token.", "final_answer": "Tool @jason-tan-swe/railway-mcp::configure_api_token output: {\"echo\": {\"token\": \"your_api_token_here\"}}", "telemetry": [{"event": "plan", "step": 0, "context": "[UTILITY] Configure the Railway API token for authentication (only needed if not set in environment variables)\n\n⚡️ Best for:\n  ✓ Initial setup\n  ✓ Token updates\n  ✓ Authentication configuration\n\n⚠️ Not for:\n  × Project configuration\n  × Service settings\n  × Environment variables\n\n→ Next steps: project_list, service_list\n\n→ Related: project_create first gather the token via the capability related to 'notion-create-pages', then complete the objective with parameters: token=sample_token."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@jason-tan-swe/railway-mcp::configure_api_token", "score": -1.4565521067821048, "similarity": 0.8973902644217763, "ic": 3.6675}, {"tool_id": "@mh8974/railway-mcp::configure_api_token", "score": -1.4565521067821048, "similarity": 0.8973902644217763, "ic": 3.6675}, {"tool_id": "@martin-songzy/coin-mcp-server::getTokenPrice", "score": -1.8484349226439374, "similarity": 0.3723136727508593, "ic": 3.4749999999999996}, {"tool_id": "@pwh-pwh/coin-mcp-server::getTokenPrice", "score": -1.8484349226439374, "similarity": 0.3723136727508593, "ic": 3.4749999999999996}, {"tool_id": "@tywenk/mcp-solana::get_token_account_balance", "score": -1.8823036620162683, "similarity": 0.3701797898482917, "ic": 3.5799999999999996}, {"tool_id": "@jason-tan-swe/railway-mcp::list_service_variables", "score": -2.9645432487402936, "similarity": 0.3507268104116653, "ic": 5.449999999999999}]}, {"event": "gate", "step": 0, "selected_tool": "@jason-tan-swe/railway-mcp::configure_api_token", "decision": true, "score": -1.4565521067821048}, {"event": "arguments", "step": 0, "tool_id": "@jason-tan-swe/railway-mcp::configure_api_token", "arguments": {"token": "your_api_token_here"}, "schema_valid": true}, {"event": "invoke", "step": 0, "tool_id": "@jason-tan-swe/railway-mcp::configure_api_token", "success": true, "error": null, "latency_ms": 3.6153749999812135}, {"event": "plan", "step": 1, "context": "environment variables)\n\n⚡️ Best for:\n  ✓ Initial setup\n  ✓ Token updates\n  ✓ Authentication configuration\n\n⚠️ Not for:\n  × Project configuration\n  × Service settings\n  × Environment variables\n\n→ Next steps: project_list, service_list\n\n→ Related: project_create first gather the token via the capability related to 'notion-create-pages', then complete the objective with parameters: token=sample_token.\nTool @jason-tan-swe/railway-mcp::configure_api_token -> {\"echo\": {\"token\": \"your_api_token_here\"}}"}, {"event": "retrieve", "step": 1, "candidates": [{"tool_id": "@aptro/superset-mcp::superset_auth_check_token_validity", "score": -0.38348180400839493, "similarity": 0.40248056945533467, "ic": 1.125}, {"tool_id": "@jason-tan-swe/railway-mcp::configure_api_token", "score": -1.4547947721713277, "similarity": 0.8978424704212148, "ic": 3.6675}, {"tool_id": "@mh8974/railway-mcp::configure_api_token", "score": -1.4547947721713277, "similarity": 0.8978424704212148, "ic": 3.6675}, {"tool_id": "@martin-songzy/coin-mcp-server::getTokenPrice", "score": -1.7839925275916806, "similarity": 0.46027649672822135, "ic": 3.4749999999999996}, {"tool_id": "@pwh-pwh/coin-mcp-server::getTokenPrice", "score": -1.7839925275916806, "similarity": 0.46027649672822135, "ic": 3.4749999999999996}, {"tool_id": "@tywenk/mcp-solana::get_token_account_balance", "score": -1.8134666996120279, "similarity": 0.4602784659367693, "ic": 3.5799999999999996}]}, {"event": "gate", "step": 1, "selected_tool": "@aptro/superset-mcp::superset_auth_check_token_validity", "decision": true, "score": -0.38348180400839493}, {"event": "arguments", "step": 1, "tool_id": "@aptro/superset-mcp::superset_auth_check_token_validity", "arguments": {"tool_name": "@jason-tan-swe/railway-mcp::configure_api_token", "arguments": {"token": "your_api_token_here"}}, "schema_valid": true}, {"event": "invoke", "step": 1, "tool_id": "@aptro/superset-mcp::superset_auth_check_token_validity", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 5.16416699997535}, {"event": "invoke", "step": 1, "tool_id": "@aptro/superset-mcp::superset_auth_check_token_validity", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 5.264749999923879}, {"event": "invoke", "step": 1, "tool_id": "@aptro/superset-mcp::superset_auth_check_token_validity", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 5.876165999893601}, {"event": "finalize", "answer": "Tool @jason-tan-swe/railway-mcp::configure_api_token output: {\"echo\": {\"token\": \"your_api_token_here\"}}"}], "metrics": {"calls": 4.0, "steps": 4.0, "pass_at_1": 0.25, "first_try_valid": 1.0, "avg_retries": 0.75, "avg_latency_ms": 4.980114499943511, "tool_switches": 1.0, "token_input": 6566.75, "token_output": 347.25, "pass_at_1_low": 0.25}}
{"task": "fuzzy::@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives::realistic::6", "prompt": "Retrieve detailed information on company executives with the FMP Company Executives API. This API provides essential data about key executives, including their name, title, compensation, and other demographic details such as gender and year of birth. first gather the symbol via the capability related to 'notion-create-pages', then complete the objective with parameters: symbol=sample_symbol, active=sample_active.", "final_answer": "No tool call executed. Prompt: Retrieve detailed information on company executives with the FMP Company Executives API. This API provides essential data about key executives, including their name, title, compensation, and other demographic details such as gender and year of birth. first gather the symbol via the capability related to 'notion-create-pages', then complete the objective with parameters: symbol=sample_symbol, active=sample_active.", "telemetry": [{"event": "plan", "step": 0, "context": "Retrieve detailed information on company executives with the FMP Company Executives API. This API provides essential data about key executives, including their name, title, compensation, and other demographic details such as gender and year of birth. first gather the symbol via the capability related to 'notion-create-pages', then complete the objective with parameters: symbol=sample_symbol, active=sample_active."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "score": -1.8113062300624376, "similarity": 0.7921083214940489, "ic": 4.085470000576925}, {"tool_id": "@vijitdaroch/financial-modeling-prep-mcp-server::getCompanyExecutives", "score": -1.8113062300624376, "similarity": 0.7921083214940489, "ic": 4.085470000576925}, {"tool_id": "@imbenrabi/financial-modeling-prep-mcp-server::getExecutiveCompensation", "score": -1.8632122757660616, "similarity": 0.3950991115561207, "ic": 3.51}, {"tool_id": "@vijitdaroch/financial-modeling-prep-mcp-server::getExecutiveCompensation", "score": -1.8632122757660616, "similarity": 0.3950991115561207, "ic": 3.51}, {"tool_id": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyProfile", "score": -1.9583370566594145, "similarity": 0.2800162623442159, "ic": 3.51}, {"tool_id": "@vijitdaroch/financial-modeling-prep-mcp-server::getCompanyProfile", "score": -1.9583370566594145, "similarity": 0.2800162623442159, "ic": 3.51}]}, {"event": "gate", "step": 0, "selected_tool": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "decision": true, "score": -1.8113062300624376}, {"event": "arguments", "step": 0, "tool_id": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "arguments": {"tool_name": "notion-create-pages", "arguments": {"query": "Retrieve stock symbol"}, "symbol": "sample_symbol"}, "schema_valid": false}, {"event": "invoke", "step": 0, "tool_id": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 7.895999999959713}, {"event": "invoke", "step": 0, "tool_id": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 6.374374999950305}, {"event": "invoke", "step": 0, "tool_id": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'tool_name' were unexpected)"}, "latency_ms": 4.535082999950646}, {"event": "finalize", "answer": "No tool call executed. Prompt: Retrieve detailed information on company executives with the FMP Company Executives API. This API provides essential data about key executives, including their name, title, compensation, and other demographic details such as gender and year of birth. first gather the symbol via the capability related to 'notion-create-pages', then complete the objective with parameters: symbol=sample_symbol, active=sample_active."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 0.0, "avg_retries": 1.0, "avg_latency_ms": 6.268485999953555, "tool_switches": 0.0, "token_input": 7859.75, "token_output": 398.75, "pass_at_1_medium": 0.0}}
{"task": "fuzzy::@horizondatawave/hdw-mcp-server::get_linkedin_user_posts::realistic::7", "prompt": "Get LinkedIn posts for a user by URN (must include prefix, example: fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY) first gather the urn via the capability related to 'notion-create-pages', then complete the objective with parameters: urn=sample_urn, count=10, timeout=300.", "final_answer": "No tool call executed. Prompt: Get LinkedIn posts for a user by URN (must include prefix, example: fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY) first gather the urn via the capability related to 'notion-create-pages', then complete the objective with parameters: urn=sample_urn, count=10, timeout=300.", "telemetry": [{"event": "plan", "step": 0, "context": "Get LinkedIn posts for a user by URN (must include prefix, example: fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY) first gather the urn via the capability related to 'notion-create-pages', then complete the objective with parameters: urn=sample_urn, count=10, timeout=300."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@horizondatawave/hdw-mcp-server::send_linkedin_post_comment", "score": -4.704400673212636, "similarity": 0.366965543148214, "ic": 8.210042475909889}, {"tool_id": "@horizondatawave/hdw-mcp-server::get_linkedin_user_posts", "score": -5.922846538735726, "similarity": 0.800495533494008, "ic": 10.910084951819782}, {"tool_id": "@horizondatawave/hdw-mcp-server::get_linkedin_user_reactions", "score": -6.088876318937664, "similarity": 0.6454664811698897, "ic": 10.910084951819782}, {"tool_id": "@horizondatawave/hdw-mcp-server::get_linkedin_post_reposts", "score": -6.370185528740573, "similarity": 0.5321939864187503, "ic": 11.18008495181978}, {"tool_id": "@horizondatawave/hdw-mcp-server::get_linkedin_post_reactions", "score": -6.378844462948205, "similarity": 0.5383955236964972, "ic": 11.18008495181978}, {"tool_id": "@horizondatawave/hdw-mcp-server::get_linkedin_post_comments", "score": -6.9646505621068275, "similarity": 0.5667734816790069, "ic": 12.212627427729668}]}, {"event": "gate", "step": 0, "selected_tool": "@horizondatawave/hdw-mcp-server::send_linkedin_post_comment", "decision": true, "score": -4.704400673212636}, {"event": "arguments", "step": 0, "tool_id": "@horizondatawave/hdw-mcp-server::send_linkedin_post_comment", "arguments": {"slot": "urn", "value": "fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY", "text": "Checking recent posts for the user.", "urn": "fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY"}, "schema_valid": true}, {"event": "invoke", "step": 0, "tool_id": "@horizondatawave/hdw-mcp-server::send_linkedin_post_comment", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('slot', 'value' were unexpected)"}, "latency_ms": 4.580667000027461}, {"event": "invoke", "step": 0, "tool_id": "@horizondatawave/hdw-mcp-server::send_linkedin_post_comment", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('slot', 'tool_name', 'value' were unexpected)"}, "latency_ms": 5.487875000085296}, {"event": "invoke", "step": 0, "tool_id": "@horizondatawave/hdw-mcp-server::send_linkedin_post_comment", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('slot', 'tool_name', 'value' were unexpected)"}, "latency_ms": 6.5292080000745045}, {"event": "finalize", "answer": "No tool call executed. Prompt: Get LinkedIn posts for a user by URN (must include prefix, example: fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY) first gather the urn via the capability related to 'notion-create-pages', then complete the objective with parameters: urn=sample_urn, count=10, timeout=300."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 1.0, "avg_retries": 1.0, "avg_latency_ms": 5.5325833333957535, "tool_switches": 0.0, "token_input": 9528.5, "token_output": 478.0, "pass_at_1_medium": 0.0}}
{"task": "fuzzy::@nisa439/weather-calculator-mcp::get_weather::realistic::8", "prompt": "Get current weather information for a city first gather the city via the capability related to 'notion-create-pages', then complete the objective with parameters: city=sample_city.", "final_answer": "No tool call executed. Prompt: Get current weather information for a city first gather the city via the capability related to 'notion-create-pages', then complete the objective with parameters: city=sample_city.", "telemetry": [{"event": "plan", "step": 0, "context": "Get current weather information for a city first gather the city via the capability related to 'notion-create-pages', then complete the objective with parameters: city=sample_city."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@Alex-Smith-1234/map_mcp::navigate_to", "score": -1.682664394855549, "similarity": 0.6335761974843561, "ic": 3.5275}, {"tool_id": "@nisa439/weather-calculator-mcp::get_weather", "score": -1.7274780905974385, "similarity": 0.70112956721611, "ic": 3.6149999999999998}, {"tool_id": "@kim-geon-admin/mcp::fetch_weather", "score": -1.7296824764054437, "similarity": 0.6253227861438794, "ic": 3.5275}, {"tool_id": "@HarunGuclu/weather_mcp::get_current_weather_tool", "score": -1.7555713465897569, "similarity": 0.619577694034866, "ic": 3.5625}, {"tool_id": "@glassBead-tc/weather-mcp::get_weather", "score": -2.3856955005400655, "similarity": 0.6528903036313684, "ic": 4.6375}, {"tool_id": "@crakcode/test_mcp_2::get_weather", "score": -2.3856955005400655, "similarity": 0.6528903036313684, "ic": 4.6375}]}, {"event": "gate", "step": 0, "selected_tool": "@Alex-Smith-1234/map_mcp::navigate_to", "decision": true, "score": -1.682664394855549}, {"event": "arguments", "step": 0, "tool_id": "@Alex-Smith-1234/map_mcp::navigate_to", "arguments": {"tool_name": "notion-create-pages", "arguments": {"city": "sample_city"}, "arguments/city": "New York"}, "schema_valid": false}, {"event": "invoke", "step": 0, "tool_id": "@Alex-Smith-1234/map_mcp::navigate_to", "success": false, "error": {"code": "invalid_input", "message": "'city' is a required property"}, "latency_ms": 6.496959000060087}, {"event": "invoke", "step": 0, "tool_id": "@Alex-Smith-1234/map_mcp::navigate_to", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'arguments/city', 'tool_name' were unexpected)"}, "latency_ms": 6.841417000032379}, {"event": "invoke", "step": 0, "tool_id": "@Alex-Smith-1234/map_mcp::navigate_to", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('arguments', 'arguments/city', 'tool_name' were unexpected)"}, "latency_ms": 5.237125000007836}, {"event": "finalize", "answer": "No tool call executed. Prompt: Get current weather information for a city first gather the city via the capability related to 'notion-create-pages', then complete the objective with parameters: city=sample_city."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 0.6666666666666666, "avg_retries": 1.0, "avg_latency_ms": 6.191833666700101, "tool_switches": 0.0, "token_input": 12001.0, "token_output": 576.25, "pass_at_1_low": 0.0}}
{"task": "fuzzy::@alphago2580/naramarketmcp::health_check::realistic::9", "prompt": "Health check endpoint for deployment monitoring. complete the objective with parameters: .", "final_answer": "No tool call executed. Prompt: Health check endpoint for deployment monitoring. complete the objective with parameters: .", "telemetry": [{"event": "plan", "step": 0, "context": "Health check endpoint for deployment monitoring. complete the objective with parameters: ."}, {"event": "retrieve", "step": 0, "candidates": [{"tool_id": "@alphago2580/naramarketmcp::health_check", "score": -0.08572713886129932, "similarity": 0.7113954581797816, "ic": 1.0375}, {"tool_id": "@santoshray02/csv-editor::health_check", "score": -0.4116968447891297, "similarity": 0.372587538493523, "ic": 1.0375}, {"tool_id": "@glassBead-tc/weather-mcp::health_check", "score": -0.49567064787197523, "similarity": 0.3502534981656356, "ic": 1.0724999999999998}, {"tool_id": "@crakcode/test_mcp_2::health_check", "score": -0.49567064787197523, "similarity": 0.3502534981656356, "ic": 1.0724999999999998}, {"tool_id": "@ForceConstant/lyrical_mcp::health_check", "score": -0.49567064787197523, "similarity": 0.3502534981656356, "ic": 1.0724999999999998}, {"tool_id": "@jason-tan-swe/railway-mcp::deployment_status", "score": -1.8740474070514084, "similarity": 0.33238840993564545, "ic": 3.6149999999999998}]}, {"event": "gate", "step": 0, "selected_tool": "@alphago2580/naramarketmcp::health_check", "decision": true, "score": -0.08572713886129932}, {"event": "arguments", "step": 0, "tool_id": "@alphago2580/naramarketmcp::health_check", "arguments": {"endpoint_path": "/health", "response_timeout_seconds": 5, "expected_response_code": 200, "check_interval_seconds": 30, "retry_attempts": 5}, "schema_valid": true}, {"event": "invoke", "step": 0, "tool_id": "@alphago2580/naramarketmcp::health_check", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('check_interval_seconds', 'endpoint_path', 'expected_response_code', 'response_timeout_seconds', 'retry_attempts' were unexpected)"}, "latency_ms": 9.736541999927795}, {"event": "invoke", "step": 0, "tool_id": "@alphago2580/naramarketmcp::health_check", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('check_interval_seconds', 'endpoint_path', 'expected_response_code', 'response_timeout_seconds', 'retry_attempts' were unexpected)"}, "latency_ms": 9.719625000002452}, {"event": "invoke", "step": 0, "tool_id": "@alphago2580/naramarketmcp::health_check", "success": false, "error": {"code": "invalid_input", "message": "Additional properties are not allowed ('check_interval_seconds', 'endpoint_path', 'expected_response_code', 'response_timeout_seconds', 'retry_attempts' were unexpected)"}, "latency_ms": 9.109707999982675}, {"event": "finalize", "answer": "No tool call executed. Prompt: Health check endpoint for deployment monitoring. complete the objective with parameters: ."}], "metrics": {"calls": 3.0, "steps": 3.0, "pass_at_1": 0.0, "first_try_valid": 1.0, "avg_retries": 1.0, "avg_latency_ms": 9.521958333304307, "tool_switches": 0.0, "token_input": 12661.0, "token_output": 638.5, "pass_at_1_low": 0.0}}
