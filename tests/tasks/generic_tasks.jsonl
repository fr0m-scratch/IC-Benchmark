{"id": "@shinzo-labs/gmail-mcp::update_auto_forwarding::realistic::0", "tool": "@shinzo-labs/gmail-mcp::update_auto_forwarding", "instruction": "Updates automatic forwarding settings\nBefore running this capability, obtain emailAddress using the related capability 'notion-create-pages' and obtain enabled using the related capability 'notion-create-pages' and obtain disposition using the related capability 'notion-create-pages'.\nFill it with:\n- emailAddress: sample_emailaddress\n- enabled: True\n- disposition: markRead", "input": {"emailAddress": "sample_emailaddress", "enabled": true, "disposition": "markRead"}, "expect": {"tool": "@shinzo-labs/gmail-mcp::update_auto_forwarding", "input": {"emailAddress": "sample_emailaddress", "enabled": true, "disposition": "markRead"}}, "meta": {"tier": "realistic", "ic_tool": 6.375, "ic_tool_bucket": "medium", "server_id": "@shinzo-labs/gmail-mcp", "dependencies": ["notion::notion-create-pages", "notion::notion-create-pages", "notion::notion-create-pages"]}}
{"id": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_freebusy_query::realistic::1", "tool": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_freebusy_query", "instruction": "[Calendar API v3] Query free/busy information for calendars\nBefore running this capability, obtain time_max using the related capability 'notion-create-pages' and obtain time_min using the related capability 'notion-create-pages' and obtain calendar_ids using the related capability 'notion-create-pages'.\nFill it with:\n- time_max: sample_time_max\n- time_min: sample_time_min\n- calendar_ids: [sample_calendar_ids_0, sample_calendar_ids_1, sample_calendar_ids_2]", "input": {"time_max": "sample_time_max", "time_min": "sample_time_min", "calendar_ids": ["sample_calendar_ids_0", "sample_calendar_ids_1", "sample_calendar_ids_2"]}, "expect": {"tool": "@INSIDE-HAIR/mcp-google-meet-and-calendar::calendar_v3_freebusy_query", "input": {"time_max": "sample_time_max", "time_min": "sample_time_min", "calendar_ids": ["sample_calendar_ids_0", "sample_calendar_ids_1", "sample_calendar_ids_2"]}}, "meta": {"tier": "realistic", "ic_tool": 6.9975, "ic_tool_bucket": "medium", "server_id": "@INSIDE-HAIR/mcp-google-meet-and-calendar", "dependencies": ["notion::notion-create-pages", "notion::notion-create-pages", "notion::notion-create-pages"]}}
{"id": "@seekeasy/seekeasy::search_restaurants::realistic::2", "tool": "@seekeasy/seekeasy::search_restaurants", "instruction": "Search for restaurants using Seekeasy. All the restaurants provided are recommended by Content Creators.\n    Returns a dictionary containing the 'results' list and an 'instruction' string for attribution.\nBefore running this capability, obtain query using the related capability 'get-tasks-by-filter'.\nFill it with:\n- query: sample_query", "input": {"query": "sample_query"}, "expect": {"tool": "@seekeasy/seekeasy::search_restaurants", "input": {"query": "sample_query"}}, "meta": {"tier": "realistic", "ic_tool": 3.5275, "ic_tool_bucket": "low", "server_id": "@seekeasy/seekeasy", "dependencies": ["@miottid/todoist-mcp::get-tasks-by-filter"]}}
{"id": "@mcpdotdirect/starknet-mcp-server::get_starknet_transaction_receipt::realistic::3", "tool": "@mcpdotdirect/starknet-mcp-server::get_starknet_transaction_receipt", "instruction": "Get transaction receipt\nBefore running this capability, obtain txHash using the related capability 'get_ad_creatives_by_ad_id'.\nFill it with:\n- txHash: sample_txhash\n- network: sample_network", "input": {"txHash": "sample_txhash", "network": "sample_network"}, "expect": {"tool": "@mcpdotdirect/starknet-mcp-server::get_starknet_transaction_receipt", "input": {"txHash": "sample_txhash", "network": "sample_network"}}, "meta": {"tier": "realistic", "ic_tool": 4.172970000576925, "ic_tool_bucket": "medium", "server_id": "@mcpdotdirect/starknet-mcp-server", "dependencies": ["@gomarble-ai/facebook-ads-mcp-server::get_ad_creatives_by_ad_id"]}}
{"id": "@sseaan/amap-mcp-server::maps_geo::realistic::4", "tool": "@sseaan/amap-mcp-server::maps_geo", "instruction": "将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬度坐标\nBefore running this capability, obtain address using the related capability 'skiaanimationthinking'.\nFill it with:\n- address: sample_address\n- city: sample_city", "input": {"address": "sample_address", "city": "sample_city"}, "expect": {"tool": "@sseaan/amap-mcp-server::maps_geo", "input": {"address": "sample_address", "city": "sample_city"}}, "meta": {"tier": "realistic", "ic_tool": 7.0150424759098895, "ic_tool_bucket": "medium", "server_id": "@sseaan/amap-mcp-server", "dependencies": ["@mahecode/mcp-react-native-skia::skiaanimationthinking"]}}
{"id": "@jason-tan-swe/railway-mcp::configure_api_token::realistic::5", "tool": "@jason-tan-swe/railway-mcp::configure_api_token", "instruction": "[UTILITY] Configure the Railway API token for authentication (only needed if not set in environment variables)\n\n⚡️ Best for:\n  ✓ Initial setup\n  ✓ Token updates\n  ✓ Authentication configuration\n\n⚠️ Not for:\n  × Project configuration\n  × Service settings\n  × Environment variables\n\n→ Next steps: project_list, service_list\n\n→ Related: project_create\nBefore running this capability, obtain token using the related capability 'notion-create-pages'.\nFill it with:\n- token: sample_token", "input": {"token": "sample_token"}, "expect": {"tool": "@jason-tan-swe/railway-mcp::configure_api_token", "input": {"token": "sample_token"}}, "meta": {"tier": "realistic", "ic_tool": 3.6675, "ic_tool_bucket": "low", "server_id": "@jason-tan-swe/railway-mcp", "dependencies": ["notion::notion-create-pages"]}}
{"id": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives::realistic::6", "tool": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "instruction": "Retrieve detailed information on company executives with the FMP Company Executives API. This API provides essential data about key executives, including their name, title, compensation, and other demographic details such as gender and year of birth.\nBefore running this capability, obtain symbol using the related capability 'notion-create-pages'.\nFill it with:\n- symbol: sample_symbol\n- active: sample_active", "input": {"symbol": "sample_symbol", "active": "sample_active"}, "expect": {"tool": "@imbenrabi/financial-modeling-prep-mcp-server::getCompanyExecutives", "input": {"symbol": "sample_symbol", "active": "sample_active"}}, "meta": {"tier": "realistic", "ic_tool": 4.085470000576925, "ic_tool_bucket": "medium", "server_id": "@imbenrabi/financial-modeling-prep-mcp-server", "dependencies": ["notion::notion-create-pages"]}}
{"id": "@horizondatawave/hdw-mcp-server::get_linkedin_user_posts::realistic::7", "tool": "@horizondatawave/hdw-mcp-server::get_linkedin_user_posts", "instruction": "Get LinkedIn posts for a user by URN (must include prefix, example: fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY)\nBefore running this capability, obtain urn using the related capability 'notion-create-pages'.\nFill it with:\n- urn: sample_urn\n- count: 10\n- timeout: 300", "input": {"urn": "sample_urn", "count": 10, "timeout": 300}, "expect": {"tool": "@horizondatawave/hdw-mcp-server::get_linkedin_user_posts", "input": {"urn": "sample_urn", "count": 10, "timeout": 300}}, "meta": {"tier": "realistic", "ic_tool": 10.910084951819782, "ic_tool_bucket": "high", "server_id": "@horizondatawave/hdw-mcp-server", "dependencies": ["notion::notion-create-pages"]}}
{"id": "@nisa439/weather-calculator-mcp::get_weather::realistic::8", "tool": "@nisa439/weather-calculator-mcp::get_weather", "instruction": "Get current weather information for a city\nBefore running this capability, obtain city using the related capability 'notion-create-pages'.\nFill it with:\n- city: sample_city", "input": {"city": "sample_city"}, "expect": {"tool": "@nisa439/weather-calculator-mcp::get_weather", "input": {"city": "sample_city"}}, "meta": {"tier": "realistic", "ic_tool": 3.6149999999999998, "ic_tool_bucket": "low", "server_id": "@nisa439/weather-calculator-mcp", "dependencies": ["notion::notion-create-pages"]}}
{"id": "@alphago2580/naramarketmcp::health_check::realistic::9", "tool": "@alphago2580/naramarketmcp::health_check", "instruction": "Health check endpoint for deployment monitoring.", "input": {}, "expect": {"tool": "@alphago2580/naramarketmcp::health_check", "input": {}}, "meta": {"tier": "realistic", "ic_tool": 1.0375, "ic_tool_bucket": "low", "server_id": "@alphago2580/naramarketmcp", "dependencies": []}}
